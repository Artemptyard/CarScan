# Generated by Django 3.2.25 on 2024-07-14 09:24

from django.db import migrations
from django.db import models
from carscan.models import UserTypes
from django.contrib.auth.hashers import make_password
import json


def create_data(apps, schema_editor):
    Car = apps.get_model('carscan', 'Car')
    User = apps.get_model('carscan', 'User')
    UserCar = apps.get_model('carscan', 'UserCar')
    RegistrationHistory = apps.get_model('carscan', 'RegistrationHistory')
    with open("../ignored.json", 'r+') as file:
        data = json.load(file)
        admin = data["admin"]
        user = data["user"]
        # Создание суперпользователя
        admin_user = User(
            email="admin@example.com",
            user_type='ADMIN',  # или UserTypes.ADMIN, если перечисление доступно
            password=make_password(admin),
            is_staff=True,
            is_superuser=True
        )
        admin_user.save()

        # Создание обычного пользователя
        regular_user = User(
            email="user@example.com",
            user_type='USER',  # или UserTypes.USER, если перечисление доступно
            password=make_password(user)
        )
        regular_user.save()
    car = Car(vin_number="WAUZZZ4BZYN139502", body_number="WAUZZZ4BZYN139502", chassis_number="Нет информации",
              license_number="В499ВН", license_region="82", model="AUDI A6 AUDI A6", brand="AUDI A6 AUDI A6",
              manufacture_year="2000", vehicle_category="Нет информации", vehicle_category_tr="M1", min_weight="1510",
              max_weight="2060", power_hp="150.0", fuel_type="Petrol", brake_system="Hydraulic",
              document_type_sts="RegTalon",
              document_series="8238", document_number="667322", document_date="Нет информации",
              document_maker="Нет информации", color="Белый", vehicle_type="Легковые автомобили седан",
              engine_capacity="2496.0", engine_number="041760", pts_series_number="Нет информации",
              pts_maker="Нет информации", pts_owner="11", hijacking="Нет информации")
    car.save()
    RegistrationHistory(car=car, period="С 2003-08-30 по 2003-10-22",
                        description="Физическое лицо - в связи с прекращением права собственности (отчуждение, конфискация ТС)").save()
    RegistrationHistory(car=car, period="С 2004-11-26 по 2008-04-17",
                        description="Физическое лицо - в связи с прекращением права собственности (отчуждение, конфискация ТС)").save()
    RegistrationHistory(car=car, period="С 2008-04-24 по 2010-03-11",
                        description="Физическое лицо - в связи с прекращением права собственности (отчуждение, конфискация ТС)").save()
    RegistrationHistory(car=car, period="С 2010-03-13 по 2011-05-27",
                        description="Физическое лицо - временный учет (временная регистрация места пребывания ТС без выдачи документов)").save()
    RegistrationHistory(car=car, period="С 2011-05-27 по 2011-05-31",
                        description="Физическое лицо - снятие с временного учета").save()
    RegistrationHistory(car=car, period="С 2010-03-13 по 2012-03-27",
                        description="Физическое лицо - в связи с прекращением права собственности (отчуждение, конфискация ТС)").save()
    RegistrationHistory(car=car, period="С 2012-06-30 по 2013-04-09",
                        description="Физическое лицо - в связи с прекращением права собственности (отчуждение, конфискация ТС)").save()
    RegistrationHistory(car=car, period="С 2013-04-09 по 2014-02-05",
                        description="Физическое лицо - по сделкам, произведенным в любой форме (купля-продажа, дарение, др.) с заменой государственных регистрационных знаков").save()
    RegistrationHistory(car=car, period="С 2014-02-05 по 2015-06-25",
                        description="Физическое лицо - изменение собственника (владельца)").save()
    RegistrationHistory(car=car, period="С 2015-06-25 по 2017-08-12",
                        description="Физическое лицо - регистрация ранее зарегистрированных в регистрирующих органах")
    RegistrationHistory(car=car, period="С 2017-08-12 по настоящее время",
                        description="Физическое лицо - изменение собственника (владельца)").save()
    UserCar(user=regular_user, car=car).save()


class Migration(migrations.Migration):
    dependencies = [
        ('carscan', '0003_change_user_model'),
    ]

    operations = [
        migrations.RunPython(create_data),
    ]
