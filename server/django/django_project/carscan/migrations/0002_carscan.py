# Generated by Django 3.2.25 on 2024-07-11 13:05

from django.db import migrations


def create_data(apps, schema_editor):
    Car = apps.get_model('carscan', 'Car')
    RegistrationHistory = apps.get_model('carscan', 'RegistrationHistory')

    car = Car(vin_number="W0L000036V1198513", body_number="W0L000036V1198513", chassis_number="Нет информации",
              license_number="К412ET", license_region="53", model="OPEL", brand="VECTRA", manufacture_year="1997",
              vehicle_category="2", vehicle_category_tr="Нет информации", min_weight="Нет информации",
              max_weight="Нет информации", power_hp="75.0", fuel_type="Нет информации", brake_system="Нет информации",
              document_type_sts="RegTalon", document_series="9949", document_number="699834",
              document_date="11.05.2023",
              document_maker="Нет информации", color="синий", vehicle_type="Легковые автомобили седан",
              engine_capacity="1799.0", engine_number="14284091", pts_series_number="Нет информации",
              pts_maker="Нет информации", pts_owner="7", hijacking="Нет информации")
    car.save()

    registration_histories = [
        {"period": "С 2004-01-03 по 2004-01-13",
         "description": "Физическое лицо - в связи с изменением места регистрации"},
        {"period": "С 2004-03-30 по 2006-04-07",
         "description": "Физическое лицо - в связи с прекращением права собственности (отчуждение, конфискация ТС)"},
        {"period": "С 2006-04-07 по 2007-05-30",
         "description": "Физическое лицо - регистрация ТС, прибывших из других регионов Российской Федерации"},
        {"period": "С 2007-05-30 по 2021-04-29",
         "description": "Физическое лицо - прекращение регистрации в том числе"},
        {"period": "С 2022-05-28 по 2022-06-22",
         "description": "Физическое лицо - прекращение регистрации в том числе"},
        {"period": "С 2022-08-03 по 2023-05-11", "description": "Физическое лицо - изменение собственника (владельца)"},
        {"period": "С 2023-05-11 по настоящее время",
         "description": "Физическое лицо - изменение собственника (владельца)"},
    ]

    for history in registration_histories:
        RegistrationHistory.objects.create(car=car, period=history["period"], description=history["description"])


class Migration(migrations.Migration):
    dependencies = [
        ('carscan', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_data),
    ]
